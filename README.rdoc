= ruby-wallet

Ruby wallet provides full access to the bitcoind JSON-RPC API, along with abstractions to better organize the features.

For a full list of all implemented methods see https://en.bitcoin.it/wiki/Original_Bitcoin_client/API_Calls_list.

== Installation

Add the following to your Gemfile

  gem "ruby-wallet", :git => "https://github.com/ruby-wallet/ruby-wallet.git"

== Usage

As with most Ruby gems, you first need to require the library into your project:

  require 'bitcoin'

After doing this, the simplest possible usage looks like this:

  RubyWallet.connect(:username => 'username', :password => 'password').balance
  # => 0.001

== Host, Port and SSL

You can specify connection information for remote clients.

  wallet = RubyWallet.connect(:username => 'username', :password => 'password', :host => 'example.com', :port => 38332, :ssl => true)

== Wallet Encryption

Bitcoin now supports wallet encryption. You should encrypt your wallet then unlock it for a specific amount of time and re-lock the wallet as needed.

  wallet.encrypt("password")
  wallet.unlock("password", 20)        # 20 seconds until the wallet relock automatically
  wallet.unlock("password")            # Defaults to 20 seconds if not specified
  wallet.lock

== Wallet Accounts

The wallet has an accounts method which organizes the bitcoin addresses in the wallet into groups.

  account = wallet.accounts.new('account name')
  wallet.accounts.with_balance         # returns array of the accounts with balance > 0

  account.addresses.count              # 1, as it already comes with an address
  account.balance                      # returns the balance of the account
  account.total_received               # returns the total amount received by the account
  account.transactions(limit: 5)       # returns array of 5 BitWallet::Transaction
  account.transactions                 # returns array of 10 BitWallet::Transaction

You can send bitcoins directly from an account, with validations to prevent overspending.

  account.send_amount 5.5, to: address # sends 5.5 bitcoin to the BitWallet::Address#address

== Account Addresses

Each account organizes a collection of addresses under a label. Addresses have their own set of useful methods.

  address = account.addresses.new
  address.address                      # 8hdsakdjh82d9327ccb64642c - the address hash
  address.total_received               # returns the total amount received by the address

== Account Transactions

A transaction has the following methods:

  transaction = account.transactions
  transaction.id
  transaction.account
  transaction.address
  transaction.amount
  transaction.category
  transaction.confirmations
  transaction.occurred_at
  transaction.received_at

== Credits

Ruby-wallet is a combination the existing projects 'bitcoin-client' created by sinister chimpmunk and 'bit_wallet' by ramontayag which relied on sinsiterchimpmunks original 
code. Along with additional features added ontop of the original code to make a more robust and complete client.  

Please share feature request, add any issues you run into or contribute to the project.

I plan to use this as the base for a new spree bitcoin plugin in the future.

